{"ast":null,"code":"import _classCallCheck from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/wee/Desktop/PROJECT/Demo/book_audio/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/wee/Desktop/PROJECT/Demo/book_audio/src/ui/CountDown.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    font-size: 22px;\\n    font-weight: bold;\\n    margin-bottom:8px;\\n    color: #005993;\\n    @media only screen and (max-width: 600px) {\\n      font-size: 18px;\\n      margin-bottom:5px;\\n    }\\n    .div{\\n        display: flex;\\n        flex-direction: column;\\n        align-items: center;\\n        p{\\n            background: pink;\\n            padding: 10px;\\n            border-radius: 5px;\\n            text-transform: uppercase;\\n            font-size: 36px;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nvar Bound = styled.div(_templateObject());\n\nvar CoundownNumber =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CoundownNumber, _React$Component);\n\n  function CoundownNumber(props) {\n    var _this;\n\n    _classCallCheck(this, CoundownNumber);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CoundownNumber).call(this, props));\n    _this.state = {\n      count: props.time,\n      running: false\n    };\n    return _this;\n  }\n\n  _createClass(CoundownNumber, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleStart();\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart() {\n      var _this2 = this;\n\n      this.timer = setInterval(function () {\n        var newCount = _this2.state.count - 1;\n\n        _this2.setState({\n          count: newCount >= 0 ? newCount : 0\n        }, function () {\n          //   this.props.getTime(this.state.count)\n          if (_this2.state.count === 0) {\n            clearInterval(_this2.timer);\n          }\n        });\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"functionX\",\n    value: function functionX(sec_num) {\n      // var sec_num = parseInt(this, 10); // don't forget the second param\n      var hours = Math.floor(sec_num / 3600);\n      var minutes = Math.floor((sec_num - hours * 3600) / 60);\n      var seconds = sec_num - hours * 3600 - minutes * 60;\n\n      if (hours < 10) {\n        hours = \"0\" + hours;\n      }\n\n      if (minutes < 10) {\n        minutes = \"0\" + minutes;\n      }\n\n      if (seconds < 10) {\n        seconds = \"0\" + seconds;\n      }\n\n      return 'Chỉ còn ' + hours + ' giờ ' + minutes + ' phút ' + seconds + ' giây';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.count; // console.log(count);\n\n      return React.createElement(Bound, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"H\\xE3y nhanh tay s\\u1EDF h\\u1EEFu USB n\\xE0y nh\\xE9 !\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" \", this.functionX(count))));\n    }\n  }]);\n\n  return CoundownNumber;\n}(React.Component);\n\nexport { CoundownNumber as default };","map":{"version":3,"sources":["/home/wee/Desktop/PROJECT/Demo/book_audio/src/ui/CountDown.js"],"names":["React","styled","Bound","div","CoundownNumber","props","state","count","time","running","handleStart","timer","setInterval","newCount","setState","clearInterval","sec_num","hours","Math","floor","minutes","seconds","functionX","Component"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,KAAK,GAAGD,MAAM,CAACE,GAAV,mBAAX;;IA0BqBC,c;;;;;AACjB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEF,KAAK,CAACG,IADJ;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFe;AAOlB;;;;wCACmB;AAChB,WAAKC,WAAL;AACH;;;kCAEa;AAAA;;AACV,WAAKC,KAAL,GAAaC,WAAW,CAAC,YAAM;AAC3B,YAAMC,QAAQ,GAAG,MAAI,CAACP,KAAL,CAAWC,KAAX,GAAmB,CAApC;;AACA,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAEM,QAAQ,IAAI,CAAZ,GAAgBA,QAAhB,GAA2B;AAApC,SAAd,EACI,YAAM;AACF;AACA,cAAI,MAAI,CAACP,KAAL,CAAWC,KAAX,KAAqB,CAAzB,EAA4B;AACxBQ,YAAAA,aAAa,CAAC,MAAI,CAACJ,KAAN,CAAb;AACH;AACJ,SANL;AAOH,OATuB,EASrB,IATqB,CAAxB;AAWH;;;2CACsB;AACnBI,MAAAA,aAAa,CAAC,KAAKJ,KAAN,CAAb;AACH;;;8BACSK,O,EAAS;AACf;AACA,UAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,GAAG,IAArB,CAAZ;AACA,UAAII,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACH,OAAO,GAAIC,KAAK,GAAG,IAApB,IAA6B,EAAxC,CAAd;AACA,UAAII,OAAO,GAAGL,OAAO,GAAIC,KAAK,GAAG,IAAnB,GAA4BG,OAAO,GAAG,EAApD;;AAEA,UAAIH,KAAK,GAAG,EAAZ,EAAgB;AAAEA,QAAAA,KAAK,GAAG,MAAMA,KAAd;AAAsB;;AACxC,UAAIG,OAAO,GAAG,EAAd,EAAkB;AAAEA,QAAAA,OAAO,GAAG,MAAMA,OAAhB;AAA0B;;AAC9C,UAAIC,OAAO,GAAG,EAAd,EAAkB;AAAEA,QAAAA,OAAO,GAAG,MAAMA,OAAhB;AAA0B;;AAC9C,aAAO,aAAaJ,KAAb,GAAqB,OAArB,GAA+BG,OAA/B,GAAyC,QAAzC,GAAoDC,OAApD,GAA8D,OAArE;AACH;;;6BAEQ;AAAA,UACGd,KADH,GACa,KAAKD,KADlB,CACGC,KADH,EAEL;;AAEA,aACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK,KAAKe,SAAL,CAAef,KAAf,CAAL,CAFJ,CADJ,CADJ;AASH;;;;EAtDuCP,KAAK,CAACuB,S;;SAA7BnB,c","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Bound = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 22px;\n    font-weight: bold;\n    margin-bottom:8px;\n    color: #005993;\n    @media only screen and (max-width: 600px) {\n      font-size: 18px;\n      margin-bottom:5px;\n    }\n    .div{\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        p{\n            background: pink;\n            padding: 10px;\n            border-radius: 5px;\n            text-transform: uppercase;\n            font-size: 36px;\n        }\n    }\n`\n\nexport default class CoundownNumber extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            count: props.time,\n            running: false,\n        }\n\n    }\n    componentDidMount() {\n        this.handleStart();\n    }\n\n    handleStart() {\n        this.timer = setInterval(() => {\n            const newCount = this.state.count - 1;\n            this.setState({ count: newCount >= 0 ? newCount : 0 },\n                () => {\n                    //   this.props.getTime(this.state.count)\n                    if (this.state.count === 0) {\n                        clearInterval(this.timer);\n                    }\n                });\n        }, 1000);\n\n    }\n    componentWillUnmount() {\n        clearInterval(this.timer);\n    }\n    functionX(sec_num) {\n        // var sec_num = parseInt(this, 10); // don't forget the second param\n        var hours = Math.floor(sec_num / 3600);\n        var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n        var seconds = sec_num - (hours * 3600) - (minutes * 60);\n\n        if (hours < 10) { hours = \"0\" + hours; }\n        if (minutes < 10) { minutes = \"0\" + minutes; }\n        if (seconds < 10) { seconds = \"0\" + seconds; }\n        return 'Chỉ còn ' + hours + ' giờ ' + minutes + ' phút ' + seconds + ' giây';\n    }\n\n    render() {\n        const { count } = this.state\n        // console.log(count);\n\n        return (\n            <Bound >\n                <div className=\"div\">\n                    <b>Hãy nhanh tay sở hữu USB này nhé !</b>\n                    <p> {this.functionX(count)}</p>\n                </div>\n\n            </Bound>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}